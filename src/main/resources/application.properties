# spring.application.name=autonomous-api-optimizer
# # Enable all actuator endpoints and Prometheus
# management.endpoints.web.exposure.include=health,info,prometheus,metrics
# management.endpoint.prometheus.enabled=true
# management.metrics.export.prometheus.enabled=true

# # Optional: Enable detailed HTTP metrics
# management.metrics.enable.http.server.requests=true

# # Optional: To track queue length (depends on your thread pool config)
# management.metrics.enable.jvm.threads.queued=true

# logging.level.root=INFO

# # Enable CPU metrics (micrometer collects JVM CPU usage by default)

# spring.redis.host=redis
# spring.redis.port=6379
# SPRING_REDIS_HOST=redis
# SPRING_REDIS_PORT=6379

# spring.redis.password=redis-password

# management.metrics.tags.application=autonomous-api-optimizer
# management.metrics.web.server.request.autotime.enabled=true
# management.metrics.web.server.request.metricName=http_server_requests_seconds
# server.port=8080
# spring.task.scheduling.pool.size=2

# logging.level.org.springframework.data.redis=DEBUG 
# logging.level.io.lettuce.core=DEBUG
# spring.redis.connect-timeout=20s 
# spring.redis.timeout=10s  
# spring.redis.lettuce.pool.max-active=16 
# spring.redis.lettuce.pool.max-idle=8 
# spring.redis.lettuce.pool.min-idle=2 
# spring.redis.lettuce.pool.max-wait=5s 
# spring.redis.retry.max-attempts=15 
# spring.redis.retry.max-wait=3s 
# spring.redis.lettuce.command-timeout=5s 
# spring.redis.lettuce.shutdown-timeout=100ms 
# spring.task.execution.pool.core-size=16
# spring.task.execution.pool.max-size=64
# spring.task.execution.pool.queue-capacity=1000
# spring.task.execution.pool.keep-alive=60s
# spring.task.execution.thread-name-prefix=async-task-

spring.application.name=autonomous-api-optimizer

# Enable important actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Optional: Enable detailed HTTP metrics
management.metrics.enable.http.server.requests=true
management.metrics.enable.jvm.threads.queued=true

# Set root log level
logging.level.root=INFO

# Suppress verbose Redis logs
logging.level.org.springframework.data.redis=WARN
logging.level.io.lettuce.core=WARN

# (Optional) Enable debug logs for your optimization logic package
# Replace 'com.yourpackage.optimizer' with the actual package if needed
logging.level.com.yourpackage.optimizer=DEBUG

# Redis connection configuration
spring.redis.host=redis
spring.redis.port=6379
spring.redis.password=redis-password

# Docker-specific environment variable support (optional redundancy)
SPRING_REDIS_HOST=redis
SPRING_REDIS_PORT=6379

# Redis tuning (timeouts and pooling)
spring.redis.connect-timeout=20s 
spring.redis.timeout=10s  
spring.redis.lettuce.pool.max-active=16 
spring.redis.lettuce.pool.max-idle=8 
spring.redis.lettuce.pool.min-idle=2 
spring.redis.lettuce.pool.max-wait=5s 
spring.redis.retry.max-attempts=15 
spring.redis.retry.max-wait=3s 
spring.redis.lettuce.command-timeout=5s 
spring.redis.lettuce.shutdown-timeout=100ms 

# Server and thread pool config
server.port=8080
spring.task.scheduling.pool.size=2
spring.task.execution.pool.core-size=16
spring.task.execution.pool.max-size=64
spring.task.execution.pool.queue-capacity=1000
spring.task.execution.pool.keep-alive=60s
spring.task.execution.thread-name-prefix=async-task-

# Prometheus metric tagging and naming
management.metrics.tags.application=autonomous-api-optimizer
management.metrics.web.server.request.autotime.enabled=true
management.metrics.web.server.request.metricName=http_server_requests_seconds

